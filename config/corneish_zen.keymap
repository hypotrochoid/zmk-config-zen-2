/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//#include <dt-bindings/zmk/mouse.h>

#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp INS>, <&kp CAPS>;
        };

        paren: paren {
            compatible = "zmk,behavior-mod-morph";
            label = "PAREN";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bracket: bracket {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET";
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        brace: brace {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACE";
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ranglelangle: ranglelangle {
            compatible = "zmk,behavior-mod-morph";
            label = "RANGLELANGLE";
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        refderef: refderef {
            compatible = "zmk,behavior-mod-morph";
            label = "REFDEREF";
            bindings = <&kp AMPS>, <&kp ASTERISK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        plusminus: plusminus {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUSMINUS";
            bindings = <&kp PLUS>, <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mod_paren: mod_paren {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_PAREN";
            bindings = <&kp>, <&paren>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mod_brace: mod_brace {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_BRACE";
            bindings = <&kp>, <&brace>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mod_bracket: mod_bracket {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_BRACKET";
            bindings = <&kp>, <&bracket>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mod_ranglelangle: mod_ranglelangle {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_RANGLELANGLE";
            bindings = <&kp>, <&ranglelangle>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        cmt: cmt {
            compatible = "zmk,behavior-hold-tap";
            label = "Custom Mod Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            retro-tap;
        };

        cmt_left: cmt_left {
            compatible = "zmk,behavior-hold-tap";
            label = "CMT_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <2000>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            retro-tap;
            hold-trigger-key-positions = <6 18 30 39 40 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41>;
            hold-trigger-on-release;
        };

        cmt_right: cmt_right {
            compatible = "zmk,behavior-hold-tap";
            label = "CMT_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <2000>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            retro-tap;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lock {
            bindings = <&tog 4>;
            key-positions = <24 0 5 38>;
            layers = <0 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W                 &kp F                  &kp P                   &kp G                       &kp J                       &kp L                     &kp U                    &kp Y                   &kp SEMI  &kp DEL
&kp APOS    &kp A  &cmt_left LEFT_ALT R  &cmt_left LEFT_META S  &cmt_left LEFT_SHIFT T  &cmt_left LEFT_CONTROL D    &cmt_right RIGHT_CONTROL H  &cmt_right RIGHT_SHIFT N  &cmt_right RIGHT_META E  &cmt_right RIGHT_ALT I  &kp O     &kp BACKSPACE
&td0        &kp Z  &kp X                 &kp C                  &kp V                   &kp B                       &kp K                       &kp M                     &kp UP_ARROW             &kp LEFT                &kp DOWN  &kp RIGHT
                                         &lt 3 UNDER            &lt 2 TAB               &lt 1 SPACE                 &lt 1 ENTER                 &lt 2 PERIOD              &lt 3 COMMA
            >;
        };

        number {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp N0               &kp N1                   &kp N2                     &kp N3                        &refderef                   &slash                      &plusminus               &kp PIPE                       &trans       &trans
&trans  &trans  &cmt LEFT_ALT GRAVE  &cmt LEFT_META NUMBER_4  &cmt RIGHT_SHIFT NUMBER_5  &cmt LEFT_CONTROL NUMBER_6    &mod_paren RIGHT_CONTROL 0  &mod_bracket RIGHT_SHIFT 0  &mod_brace RIGHT_META 0  &mod_ranglelangle RIGHT_ALT 0  &kp EQUAL    &trans
&trans  &trans  &kp QUESTION         &kp N7                   &kp N8                     &kp N9                        &kp EXCL                    &kp AT                      &kp HASH                 &kp DOLLAR                     &kp PERCENT  &trans
                                     &trans                   &trans                     &trans                        &trans                      &trans                      &trans
            >;
        };

        mouse {
            display-name = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp INSERT    &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &trans         &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans        &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &kp PAGE_UP    &kp HOME  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp PAGE_DOWN  &kp END   &trans
                        &trans  &trans  &trans        &mkp LCLK       &mkp RCLK       &trans
            >;
        };

        fn {
            display-name = "Fn";
            bindings = <
&trans           &kp F1        &kp F2        &kp F3  &kp F4      &kp F5         &kp F6       &kp F7           &kp F8           &kp F9                &kp F10          &kp F11
&rgb_ug RGB_TOG  &out OUT_TOG  &bt BT_CLR    &trans  &sys_reset  &bootloader    &bootloader  &rgb_ug RGB_BRI  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC  &kp PRINTSCREEN  &kp F12
&rgb_ug RGB_EFF  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans      &trans         &trans       &rgb_ug RGB_BRD  &kp C_VOL_DN     &kp C_BRIGHTNESS_DEC  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                             &trans  &trans      &trans         &trans       &trans           &trans
            >;
        };

        locked {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
