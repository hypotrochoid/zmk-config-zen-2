/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//#include <dt-bindings/zmk/mouse.h>

#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        paren: paren {
            compatible = "zmk,behavior-mod-morph";
            label = "PAREN";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bracket: bracket {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET";
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        brace: brace {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACE";
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ranglelangle: ranglelangle {
            compatible = "zmk,behavior-mod-morph";
            label = "RANGLELANGLE";
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        refderef: refderef {
            compatible = "zmk,behavior-mod-morph";
            label = "REFDEREF";
            bindings = <&kp AMPS>, <&kp ASTERISK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        plusminus: plusminus {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUSMINUS";
            bindings = <&kp PLUS>, <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lock {
            bindings = <&tog 6>;
            key-positions = <24 0 5 38>;
            layers = <0 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W           &kp E            &kp R             &kp T                 &kp Y                &kp U              &kp I             &kp O                   &kp P      &kp BSPC
&kp LEFT_GUI  &kp A  &mt LEFT_ALT S  &mt LEFT_META D  &mt LEFT_SHIFT F  &mt LEFT_CONTROL G    &mt RIGHT_CONTROL H  &mt RIGHT_SHIFT J  &mt RIGHT_META K  &mt RIGHT_ALT UP_ARROW  &kp L      &kp SQT
&td0          &kp Z  &kp X           &kp C            &kp V             &kp B                 &kp N                &kp M              &kp LEFT          &kp DOWN                &kp RIGHT  &kp ESC
                                     &lt 3 UNDER      &lt 2 TAB         &lt 1 SPACE           &lt 1 ENTER          &lt 2 PERIOD       &lt 3 COMMA
            >;
        };

        number {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp N0  &kp N1  &kp N2  &kp N3    &trans                &trans             &trans                &trans  &trans  &trans
&trans  &trans  &trans  &kp N4  &kp N5  &kp N6    &kp C_MUTE            &kp C_VOLUME_UP    &trans                &trans  &trans  &trans
&trans  &trans  &trans  &kp N7  &kp N8  &kp N9    &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans
                        &trans  &trans  &trans    &kp INS               &kp DEL            &trans
            >;
        };

        open {
            display-name = "LSYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH  &kp DLLR        &kp PRCNT    &paren     &bracket  &brace      &ranglelangle  &trans  &kp BSPC
&trans  &kp GRAVE     &kp TILDE     &kp PIPE  &kp UNDERSCORE  &kp EQUAL    &refderef  &slash    &plusminus  &kp SLASH      &trans  &trans
&trans  &out OUT_USB  &out OUT_BLE  &none     &none           &none        &kp LEFT   &kp DOWN  &kp RIGHT   &trans         &trans  &trans
                                    &trans    &trans          &kp SPACE    &kp RET    &trans    &trans
            >;
        };

        close {
            display-name = "RSYMBOL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp RIGHT_PARENTHESIS  &kp RBKT       &kp RIGHT_BRACE  &kp GREATER_THAN  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp ASTERISK           &kp PAGE_UP    &kp PLUS         &kp BACKSLASH     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME               &kp PAGE_DOWN  &kp END          &trans            &trans  &trans
                        &trans  &trans  &trans    &trans                 &trans         &trans
            >;
        };

        mouse {
            display-name = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans  &trans
                        &trans  &trans  &trans    &mkp LCLK       &mkp RCLK       &trans
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans           &kp F1        &kp F2        &kp F3  &kp F4      &kp F5         &kp F6       &kp F7  &kp F8  &kp F9  &kp F10          &kp F11
&rgb_ug RGB_TOG  &out OUT_TOG  &bt BT_CLR    &trans  &sys_reset  &bootloader    &bootloader  &trans  &trans  &trans  &kp PRINTSCREEN  &kp F12
&rgb_ug RGB_EFF  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans      &trans         &trans       &trans  &trans  &trans  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                             &trans  &trans      &trans         &trans       &trans  &trans
            >;
        };

        locked {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        twothree {
            if-layers = <1 2>;
            then-layer = <5>;
        };
    };
};
